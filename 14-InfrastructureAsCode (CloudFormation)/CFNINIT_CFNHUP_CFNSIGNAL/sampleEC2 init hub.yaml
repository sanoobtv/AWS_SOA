AWSTemplateFormatVersion: 2010-09-09
Description: AN EC2 instance and S3 bucket with CFN Signal 

Parameters: 
  LatestAmiId:
    Description: "Selecting the AMI for EC2 instances"
    Type : 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  Message:
    Description: "What goes in the HTML Page"
    Default: "Nothing was Provided"
    Type: "String"  

  EC2Key:
    Description: "Choose a key for EC2"
    Type: AWS::EC2::KeyPair::KeyName
  
  InstanceType:
    Description : "Pick an Instance Type"
    Type : String
    AllowedValues:
      - t2.micro
      - t3.micro
    Default: t2.micro    
Resources: 
  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "SSH and HTTPS given as name"
      GroupDescription: "SSH and HTTP given as description"
      SecurityGroupIngress:
        - Description: 'Allow SSH In'
          IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - Description: "Allow HTTP In"
          IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: "Name"
          Value: "EC2_SG_SSH_HTTP"
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
     AccessControl: Private 
     Tags:
      - Key: Name
        Value: aRandomBucket
  myEC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      'AWS::CloudFormation::Init':
        config:
          packages:
            yum:
              httpd: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack = ${AWS::StackName}
                region = ${AWS::Region}
                interval = 1
                verbose=true
              mode : '000400'
              owner: 'root'
              group : 'root'
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.myEC2Instance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource myEC2Instance --region ${AWS::Region}
                runas=root
              mode: '000400'
              owner: 'root'
              group: 'root'  
            /var/www/html/index.html:
              content: !Sub |
                <html><head><title>Amazing test page</title></head><body><h1><center>${Message}</center></h1></body></html>
          commands:
            simulatesleep:
              command: "sleep 1"
          services:
            sysvinit:
              cfn-hup:
                enabled : "true"
                ensureRunning : "true"
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              httpd:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "var/www/html/index.html"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    Properties:
      KeyName: !Ref EC2Key
      DisableApiTermination: false 
      ImageId: !Ref LatestAmiId
      InstanceType: !Ref InstanceType
      Monitoring: false
      SecurityGroupIds:
        - !Ref EC2SG
      Tags:
        - Key: Name
          Value: EC2InstanceName  
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash -ex
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource myEC2Instance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource myEC2Instance --region ${AWS::Region}
          
Outputs:
  EC2IP: 
    Description : HTTP Link
    Value: !Join  [ '',["http://",!GetAtt myEC2Instance.PublicIp]]